package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"app/graph/generated"
	"app/pkg/db"
	"app/pkg/db/models"
	"context"
	"fmt"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) Register(ctx context.Context, firstName string, lastName string, email string, password string) (*generated.AuthPayload, error) {
	user, err := models.NewUser(
		firstName,
		lastName,
		email,
		password,
	)

	if err != nil {
		fmt.Println(err)

		return nil, err
	}

	db, err := db.CreateDBConnection()

	if err != nil {
		fmt.Println(err)

		return nil, err
	}

	result := db.Create(&user)

	if result.Error != nil {
		fmt.Println(result.Error)

		return nil, result.Error
	}

	response := &generated.AuthPayload{
		Token: "some-token",
		User:  models.DBUserToGraphUser(user),
	}

	return response, nil
}
